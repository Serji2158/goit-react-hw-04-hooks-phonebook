{"version":3,"sources":["Component/contactList/ContactList.js","Component/filter/Filter.js","Component/contactForm/ContactForm.js","Component/AppHook.js","index.js","Component/contactForm/contactForm.module.css","Component/contactList/ContactList.module.css","Component/filter/Filter.module.css"],"names":["ContactList","contacts","deletContact","className","s","list","map","contact","data","name","number","btn","type","id","onClick","Filter","value","onChange","form","inputName","input","pattern","title","required","ContactForm","isExistContact","addNewContact","useState","setName","setNumber","onHandleChange","e","target","contactForm","onSubmit","preventDefault","alert","prev","contactForm__btn","AppHook","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","some","toLowerCase","newContact","uuidv4","normolizedFilter","includes","filteredContacts","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c3ad1a23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deletContact }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <ol className={s.list}>\r\n          {contacts.map((contact) => (\r\n            <li className={s.data} key={contact.id}>\r\n              <p>\r\n                {contact.name} : {contact.number}\r\n              </p>\r\n              <button\r\n                className={s.btn}\r\n                type=\"button\"\r\n                id={contact.id}\r\n                onClick={deletContact}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.object.isRequired,\r\n  deletContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <div className={s.form}>\r\n        <label>\r\n          <p className={s.inputName}>Find contacts by name</p>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            onChange={onChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./contactForm.module.css\";\r\n\r\nconst ContactForm = ({ isExistContact, addNewContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName((prev) => \"\");\r\n    setNumber((prev) => \"\");\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isExistContact(name)) {\r\n      alert(`${name} is already exist`);\r\n    } else {\r\n      addNewContact({ name, number });\r\n    }\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={s.contactForm} onSubmit={onHandleSubmit}>\r\n      <label>\r\n        <p className={s.inputName}>Name:</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={onHandleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.inputName}>Number:</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={onHandleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <div className={s.contactForm__btn}>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onHandleChange: PropTypes.func.isRequired,\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\n\r\nconst AppHook = () => {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(localStorage.getItem(\"contacts\")) ?? \"\"\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addNewContact = (newContact) => {\r\n    setContacts((prev) => [...prev, { id: uuidv4(), ...newContact }]);\r\n  };\r\n\r\n  const isExistContact = (name) =>\r\n    contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n  const deletContact = (e) => {\r\n    const id = e.target.id;\r\n    setContacts((prev) => prev.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  const onHandleChangeFilter = (e) => {\r\n    const filter = e.target.value;\r\n    setFilter(filter);\r\n  };\r\n\r\n  const filteredContacts = () => {\r\n    // const { filter, contacts } = this.state;\r\n    const normolizedFilter = filter.toLowerCase();\r\n    return normolizedFilter\r\n      ? contacts.filter((contact) =>\r\n          contact.name.toLowerCase().includes(normolizedFilter)\r\n        )\r\n      : contacts;\r\n  };\r\n\r\n  // const filteredContacts = getVisibleContacts();\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          isExistContact={isExistContact}\r\n          addNewContact={addNewContact}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={onHandleChangeFilter} />\r\n        <ContactList\r\n          contacts={filteredContacts()}\r\n          deletContact={deletContact}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppHook;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/index.css\";\n// import App from \"./Component/App\";\nimport AppHook from \"./Component/AppHook\";\n\nReactDOM.render(\n  <>\n    <AppHook />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__3ZnCy\",\"contactForm__btn\":\"contactForm_contactForm__btn__3aot2\",\"btn\":\"contactForm_btn__YXXEK\",\"inputName\":\"contactForm_inputName__2ifjL\",\"input\":\"contactForm_input__1VYTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2X8DA\",\"data\":\"ContactList_data__3_gAB\",\"btn\":\"ContactList_btn__2gYaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__19jMi\",\"inputName\":\"Filter_inputName__29Y7e\",\"input\":\"Filter_input__2C-X5\"};"],"sourceRoot":""}